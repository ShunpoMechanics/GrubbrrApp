@model GrubbrrApp.Models.Employee


@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Employee Info</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, "First Name:", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required="required" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, "Address:", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Gender, "Gender:", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(GrubbrrApp.Models.Employee.GenderTypes))), "Select Gender", htmlAttributes: new { @required = "required" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, "Last Name:", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, "Birth Date:", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input class="datefield" data-val="true" data-val-required="Date is required"
                           id="BirthDate" name="BirthDate" type="date" value="" />
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            

            <div class="form-group">
                @Html.LabelFor(model => model.JoinDate, "Join Date:", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <input class="datefield" data-val="true" data-val-required="Date is required"
                           id="JoinDate" name="JoinDate" type="date" value="model.BirthDate" />
                    @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                Roles:
                @foreach (var item in @ViewBag.Roles)
                {
                    @Html.RadioButtonFor(model => model.Role, (int)item.RoleId)
                    @Html.LabelFor(model => model.Role, (string)item.RoleName)
                }
            </div>
            <div class="form-group">
                Skills:
                @foreach (var skill in Model.SkillsArr)
                {
                    <input type="checkbox" name="skillsArr" value="@skill.SkillId" />
                    @Html.LabelFor(model => model.SkillsArr, (string)skill.SkillName)
                }

            </div>
            <div class="form-group">
                Hobbies:
                @Html.ListBoxFor(model => model.HobbiesArr, new SelectList(Model.HobbiesArr, "HobbyId", "HobbyName"), htmlAttributes: new { @name="hobbiesArr" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.About, "About: ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.About, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="Save" value="Save" class="btn btn-default" />
                <input type="submit" name="Cancel" value="Cancel" formnovalidate class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
