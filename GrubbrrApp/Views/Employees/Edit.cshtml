@model GrubbrrApp.Models.Employee

@{
    ViewBag.Title = "Edit";
}
<head>
    <link rel="stylesheet" href="../../Styles/Create.css" type="text/css" />
</head>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Employee Info</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "First Name:", htmlAttributes: new { @class = "control-label col-md-3"})
            <div class="col-md-9">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Address:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Gender, "Gender:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.Gender, new SelectList(Enum.GetValues(typeof(GrubbrrApp.Models.Employee.GenderTypes))), "Select Gender", htmlAttributes: new { @required = "required", @class="grubbrr-dropdown" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, "Last Name:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, "Birth Date:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <input class="datefield" data-val="true" data-val-required="Date is required"
                       id="BirthDate" name="BirthDate" type="date" value="@ViewBag.BirthDate" />
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.JoinDate, "Join Date:", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                <input class="datefield" data-val="true" data-val-required="Date is required"
                       id="JoinDate" name="JoinDate" type="date" value="@ViewBag.JoinDate" />
                @Html.ValidationMessageFor(model => model.JoinDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <div class="col-md-1 roles">
                @Html.Label("Roles:")
            </div>
            @foreach (var item in @ViewBag.Roles)
            {
                <div class="col-md-2">
                    @Html.RadioButtonFor(model => model.Role, (int)item.RoleId)
                    @Html.LabelFor(model => model.Role, (string)item.RoleName)
                </div>
            }
            <div class="col-md-1"></div>
        </div>
    </div>
    <div class="col-md-12">

        <div class="form-group">
            <div class="col-md-1 skills">
                @Html.Label("Skills:")
            </div>
                @foreach (var skill in Model.SkillsArr)
                {
                <div class="checkbox-container col-md-2">
                    @if (ViewBag.selectedSkills.Contains(skill.SkillId))
                    {
                    <input type="checkbox" name="skillsArr" value="@skill.SkillId" checked="checked" />
                    }
                    else
                    {
                    <input type="checkbox" name="skillsArr" value="@skill.SkillId" />
                    }
                    @Html.LabelFor(model => model.SkillsArr, (string)skill.SkillName)
                </div>
                }
            </div>
        </div>
    <div class="col-md-12">

        <div class="form-group">
            <div class="col-md-1 hobbies">
                @Html.Label("Hobbies:")
            </div>
            <div class="col-md-3">
                @Html.DropDownList("HobbyId", new MultiSelectList(Model.HobbiesArr, "HobbyId", "HobbyName", ViewBag.selectedHobbies), htmlAttributes: new { Name = "hobbiesArr", multiple = "multiple" })
            </div>
            </div>

        <div class="form-group">
            <div class="col-md-1 about">
                @Html.LabelFor(model => model.About, "About: ", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-7">
                    @Html.TextAreaFor(model => model.About, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    <div class="form-group">
        <div class="col-md-12 button-group">
            <input type="submit" value="Save" class="btn btn-default btn-success" />
            <input type="submit" name="Cancel" value="Cancel" formnovalidate class="btn btn-default btn-danger" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
